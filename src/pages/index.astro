---
import Header from "../components/Header.astro";
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Scene3D from "../components/Scene3D.astro";
import escena from "../assets/greenleaf_comp.glb";
import card1 from "../assets/card1.svg?raw";
import card2 from "../assets/card2.svg?raw";
import card3 from "../assets/card3.svg?raw";

import approach1 from "../assets/approach1.svg";
import approach2 from "../assets/approach2.svg";
import approach3 from "../assets/approach3.svg";
import approach4 from "../assets/approach4.svg";

import team1 from "../assets/team1.jpg";
import team2 from "../assets/team2.jpg";

import support1 from "../assets/support1.png";
import support2 from "../assets/support2.png";
import support3 from "../assets/support3.png";
import support4 from "../assets/support4.png";
import support5 from "../assets/support5.png";

const focus_content = "Our Mission".split("");
const approach_content = "Our approach".split("");
const team_content = "Team".split("");
const supported_by_content = "Supported by".split("");
const focus_spans = focus_content
	.map((letter, index) => {
		return `<span class="letter letter-${index}">${letter}</span>`;
	})
	.join("");
const approach_spans = approach_content
	.map((letter, index) => {
		return `<span class="letter letter-${index}">${letter}</span>`;
	})
	.join("");
const team_spans = team_content
	.map((letter, index) => {
		return `<span class="letter letter-${index}">${letter}</span>`;
	})
	.join("");
const supported_by_spans = supported_by_content
	.map((letter, index) => {
		return `<span class="letter letter-${index}">${letter}</span>`;
	})
	.join("");
---

<Layout>
	<Header />
	<div id="sections">
		<section id="our-focus" class="page-section">
			<div
				id="our-focus-contents"
				class="section-contents container-fluid"
			>
				<div class="row section-title">
					<h1><Fragment set:html={focus_spans} /></h1>
				</div>
				<div class="row">
					<h3>
						To ensure global food security by revolutionising sustainable disease management for crops.
					</h3>
				</div>
				<div class="row cards">
					<div class="card-col col-lg-3">
						<Card title="In the field">
							<Fragment set:html={card1} />
						</Card>
					</div>
					<div class="card-col col-lg-3">
						<Card title="During storage">
							<Fragment set:html={card2} />
						</Card>
					</div>
					<div class="card-col col-lg-3">
						<Card title="Foodborne disease">
							<Fragment set:html={card3} />
						</Card>
					</div>
				</div>
			</div>
		</section>
		<section id="our-approach" class="page-section">
			<div class="our-approach-bg" id="our-approach-bg-1"></div>
			<div class="our-approach-bg" id="our-approach-bg-2"></div>
			<div class="our-approach-bg" id="our-approach-bg-3"></div>
			<div
				id="our-approach-contents"
				class="section-contents container-fluid"
			>
				<div class="row section-title">
					<h1><Fragment set:html={approach_spans} /></h1>
				</div>
				<div class="row">
					<div
						id="our-approach-text"
						class="col-xxl-6 align-self-center"
					>
						<h3>
							We create next-generation crop protectants using
							bacteriophages.
						</h3>
						<div class="approach-rows">
							<div class="approach-container">
								<div class="approach-img"><img src={approach1.src}></img></div>
							<div class="approach-row">
								
								<div class="approach-text">Effective</div>
							</div>
							</div>
							<div class="approach-container">
							<div class="approach-img"><img src={approach2.src}></img></div>
							<div class="approach-row">
								
								<div class="approach-text">Specific to target disease</div>
							</div>
							</div>
							<div class="approach-container">
							<div class="approach-img"><img src={approach3.src}></img></div>
							<div class="approach-row">
								
								<div class="approach-text">Non-toxic to humans and the environment</div>
							</div>
							</div>
							<div class="approach-container">
							<div class="approach-img"><img src={approach4.src}></img></div>
							<div class="approach-row">
								
								<div class="approach-text">Modular architecture enables engineering</div>
							</div>
						</div>
						</div>
					</div>
					<div id="model-col" class="col-xxl-6 mt-5">
						<div id="model3d">
							<Scene3D glbPath={escena} camera="Camera" />
						</div>
					</div>
				</div>
			</div>
		</section>
		<section id="team" class="page-section">
			<div id="team-contents" class="section-contents container-fluid">
				<div class="row section-title">
					<h1><Fragment set:html={team_spans} /></h1>
				</div>
				
				<div class="row justify-content-center">
					<div class="col-md-5 team-card">
						<div class="team-card-inner">
							<div class="team-photo-container">
								<!-- Replace with actual image later -->
								<img src={team1.src} alt="Lara Sellés Vidal" class="team-photo" />
							</div>
							<div class="team-info">
								<h3 class="team-name">Lara Sellés Vidal, PhD <a target="_blank" href="https://linkedin.com/in/lara-selles-vidal"><i class="fa-brands fa-linkedin"/></a></h3>
								<p class="team-role">Co-founder</p>
							</div>
						</div>
					</div>
					<div class="col-md-5 team-card">
						<div class="team-card-inner">
							<div class="team-photo-container">
								<!-- Replace with actual image later -->
								<img src={team2.src} alt="George Taylor" class="team-photo" />
							</div>
							<div class="team-info">
								<h3 class="team-name">George Taylor, PhD <a target="_blank" href="https://linkedin.com/in/gm-taylor"><i class="fa-brands fa-linkedin"/></a></h3>
								<p class="team-role">Co-founder</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section id="supported-by" class="page-section">
		<div id="supported-by-contents" class="section-contents container-fluid">
			<div class="row section-title">
				<h1><Fragment set:html={supported_by_spans} /></h1>
			</div>
			
			<div class="row supporter-logos justify-content-center align-items-center">
				<div class="col-md-3 col-sm-6 supporter-card">
					<div class="supporter-logo">
						<img id="support1" src={support1.src}/>
					</div>
				</div>
				<div class="col-md-3 col-sm-6 supporter-card">
					<div class="supporter-logo">
						<img id="support2" src={support2.src}/>
					</div>
				</div>
				<div class="col-md-3 col-sm-6 supporter-card">
					<div class="supporter-logo">
						<img id="support3" src={support3.src}/>
					</div>
				</div>
				<div class="col-md-3 col-sm-6 supporter-card">
					<div class="supporter-logo">
						<img id="support4" src={support4.src}/>
					</div>
				</div>
				<div class="col-md-3 col-sm-6 supporter-card">
					<div class="supporter-logo">
						<img id="support5" src={support5.src}/>
					</div>
				</div>
			</div>
		</div>
	</section>
	</div>
</Layout>

<style>
	#support3{
		width: 200px;
	}
	#support4{
		width: 200px;
	}
	#our-focus {
		background: linear-gradient(to right, #faece0, white);
	}
	#our-approach {
		background: linear-gradient(to right, #ff9e9a, #faece0);
	}
	#team {
		background: linear-gradient(to right, #faece0, white);
		z-index: 5;
	}
	.cards {
		margin-top: 50px;
		justify-content: center;

		.card-col {
			justify-items: center;
			position: relative;
		}

		path,
		g {
			will-change: transform;
		}
	}

	.cards .card-col + .card-col {
		margin-top: 50px;
	}

	#model3d {
		height: 70vh;
		border-radius: 20px;
		position: relative;
		overflow: visible;
		z-index: -10 !important;
	}

	.approach-rows {
		display: flex;
		flex-direction: column;
		gap: 60px;
		margin-top: 50px;
	}
	.approach-container {
		display: flex;
		position: relative;
		align-items: center;
		gap: 20px;
		font-size: 1.5rem;
		width: 100%;
		transition: all 0.3s;
	}
	.approach-row {
		width: 100%;
		background: #ff7e79;
		padding: 20px 24px;
		border: 3px solid #ff7e79;
		border-radius: 10px 40px 10px 40px;
		box-shadow: 0 3px 10px rgba(255, 126, 121, 0.1);
		transition: all 0.3s;
		position: relative;
		overflow: hidden;

		&::before {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			transform: translateX(20px);
			background-color: #faece0;
			transition: all 0.3s ease;
			z-index: 1;
			border-radius: 10px 30px 10px 30px;
		}
	}

	.approach-container:hover {
		transform: translateY(-4px) scale(1.05);
		
		
	}
	.approach-container:hover .approach-row {
		border-color: #ff5a54;
		background-color: #ff5a54;
		box-shadow: 0 5px 15px rgba(255, 126, 121, 0.2);
	}

	.approach-text {
		position: relative;
		z-index: 2;
		text-align: center;
	}

	.approach-img {
		width: 100px;
		height: 100px;
		background-color: #faece0;
		border: 3px  solid #ff7e79;
		border-radius: 999px;
		position: absolute;
		padding: 0px;
		top:0px;
		left: 20px;
		transform: translateX(-50%) translateY(-50%);
		z-index: 3;
		display: flex;
		justify-content: center;
		align-items: center;
		overflow: visible;

		img {
			width: 90%;
			height: auto;
			z-index: 2
		}
	}
	#model-col{
		margin-top: 0px !important;
	}

.team-card {
    margin-top: 40px;
    transition: all 0.3s ease;
}

.team-card-inner {
    background-color: white;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
}

.team-card-inner:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.team-photo-container {
    width: 100%;
	height: 400px;
    overflow: hidden;
	display: flex;
	justify-content: center;
	align-items: center;
	position: relative;

	img {
		height: 100%;
		width: 100%;
		object-fit: cover;
		object-position: center;
	}
}

.team-photo-placeholder {
    width: 100%;
    height: 100%;
    background-color: #faece0;
    background-image: linear-gradient(45deg, #ff9e9a 25%, transparent 25%, 
                      transparent 75%, #ff9e9a 75%, #ff9e9a),
                      linear-gradient(45deg, #ff9e9a 25%, transparent 25%, 
                      transparent 75%, #ff9e9a 75%, #ff9e9a);
    background-size: 20px 20px;
    background-position: 0 0, 10px 10px;
}

.team-info {
    padding: 20px;
    text-align: center;
}

.team-name {
    font-size: 1.4rem;
    margin-bottom: 5px;
    color: #333;
}

.team-role {
    font-size: 1.1rem;
    color: #ff7e79;
    font-weight: 500;
}

#supported-by {
    background: linear-gradient(to right, #faece0, #ff9e9a);
}

.supporter-card {
	width: auto !important;
    margin-bottom: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.supporter-logos {
	margin-top: 40px;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	gap: 40px;
}

.supporter-logo {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 15px;
    transition: all 0.3s ease;
    overflow: hidden;
}

.logo-placeholder {
    color: #999;
    font-size: 0.9rem;
    text-align: center;
    font-weight: 500;
    padding: 10px;
}

/* When you add actual images, use this instead of placeholder */
.supporter-logo img {
    transition: all 0.3s ease;
	max-width: 100%;
}

@media screen and (max-width: 768px) {
    .supporter-card {
        margin-bottom: 20px;
    }

}

	@media screen and (max-width: 1400px) {
		.approach-container {
			transform: none !important;
		}
	}
	@media screen and (min-width: 992px) {
		.card-col {
			/* width: 22vw; */
		}
		.cards .card-col + .card-col {
			margin-top: 0px;

			&::before {
				content: "▷";
				text-indent: 5px;
				display: block;
				position: absolute;
				top: 50%;
				left: 0;
				width: 100px;
				height: 100px;
				border-radius: 100%;
				background: #ff9e9a;
				color: #faece0;
				text-align: center;
				font-size: 50px;
				z-index: 50;
				transform: translateY(-50%) translateX(-50%);
				outline: solid #faece0 5px;
				align-content: center;
				text-box-trim: trim-start;
			}
		}
	}

	@media screen and (min-width: 1400px) {
		#our-approach {
			background: linear-gradient(to right, #ff7e79 50%, #faece0 90%);
		}

		.our-approach-bg {
			content: "";
			top: 0px;
			left: 0px;
			display: block;
			position: absolute;
			height: 100%;
			width: 60%;
			background-color: white;
			z-index: 3;
			transform: skewX(-10deg);
			transform-origin: top;
		}
		#our-approach-bg-1 {
			z-index: 3;
			left: -100px;
			background: linear-gradient(to bottom, #faece0, white);
		}
		#our-approach-bg-2 {
			z-index: 2;
			left: -50px;
			background: #ffdac5;
		}
		#our-approach-bg-3 {
			z-index: 1;
			background: #ffb8a6;
		}
		#our-approach-contents {
			z-index: 4;
			position: relative;
		}
		.team-card {
				width: 30%;
		}
	}
</style>

<script>
	import { animate, onScroll, stagger } from "../scripts/anime.esm.min";
	document.addEventListener("astro:page-load", () => {
		// Only run this code for the index page
		if ((window.location.pathname !== "/") && (window.location.pathname !== "/")) return;
		let mouseX = 0;
		let mouseY = 0;
		let targetX = 0;
		let targetY = 0;
		const parallaxIntensity = 0.001;
		const easing = 0.05; // Adjust easing for smoother transitions

		// Detect if the user is on a mobile device
		const isMobile = /Mobi|Android/i.test(navigator.userAgent);

		// Function to apply transformations
		function applyTransformations(x, y) {
			document
				.querySelectorAll(".card path, .card g")
				.forEach((element) => {
					let depth = element.getAttribute("data-depth");
					if (depth) {
						let transformX = x * depth * parallaxIntensity;
						let transformY = y * depth * parallaxIntensity;
						element.style.transform = `translate(${transformX}px, ${transformY}px)`;
					}
				});
		}

		if (isMobile) {
			let tiltX = 0;
			let tiltY = 0;
			let lastTiltX = 0;
			let lastTiltY = 0;
			let targetTiltX = 0;
			let targetTiltY = 0;
			let lastUpdate = Date.now();
			const throttleInterval = 50; // Update every 50ms

			// Use device orientation for tilt effect on mobile
			window.addEventListener("deviceorientation", (event) => {
				const now = Date.now();
				if (now - lastUpdate >= throttleInterval) {
					targetTiltX = event.gamma == null ? 0 : event.gamma; // Left-to-right tilt in degrees
					targetTiltY = event.beta == null ? 0 : event.beta; // Front-to-back tilt in degrees
					lastUpdate = now;
				}
			});

			function animateTilt() {
				tiltX += (targetTiltX - tiltX) * easing;
				tiltY += (targetTiltY - tiltY) * easing;

				// Only update if the change is significant
				if (
					Math.abs(tiltX - lastTiltX) > 0.1 ||
					Math.abs(tiltY - lastTiltY) > 0.1
				) {
					applyTransformations(tiltX * 10, tiltY * 10);
					lastTiltX = tiltX;
					lastTiltY = tiltY;
				}

				requestAnimationFrame(animateTilt);
			}

			// Start the animation loop
			animateTilt();
		} else {
			// Use mouse movement for parallax effect on desktop
			document.addEventListener("mousemove", (event) => {
				// Center the translation at half the screen
				targetX = event.clientX - window.innerWidth / 2;
				targetY = event.clientY - window.innerHeight / 2;
			});

			function animateParallax() {
				// Smoothly interpolate mouse position
				mouseX += (targetX - mouseX) * easing;
				mouseY += (targetY - mouseY) * easing;

				applyTransformations(mouseX * 0.5, mouseY * 0.5);

				requestAnimationFrame(animateParallax);
			}

			// Start the animation loop
			animateParallax();
		}

		document
			.querySelectorAll(".section-contents")
			.forEach((section, index) => {
				animate(section, {
					opacity: [0, 1],
					translateX: ["-100%", "0%"],
					duration: 1000,
					autoplay: onScroll({
						enter: "90% top",
						leave: "40% top",
						sync: 0.1,
					}),
				});

				animate(section.querySelectorAll("h1 span"), {
					opacity: [0, 1],
					translateY: ["-100%", "0%"],
					duration: 1000,
					delay: stagger(200),
					autoplay: onScroll({
						enter: "60% top",
						leave: "40% top",
						sync: 0.1,
					}),
				});
			});

		animate(".card", {
			opacity: [0, 0, 1],
			translateY: ["100%", "0%"],
			duration: 1000,
			delay: stagger(200),
			autoplay: onScroll({
				enter: "bottom top",
				leave: "40% top",
				sync: 0.2,
			}),
		});
		
		animate(".approach-container", {
			opacity: [0, 0, 1],
			x: ["200%", stagger(8)],
			duration: 1000,
			delay: stagger(200),
			autoplay: onScroll({
				enter: "80% top",
				leave: "40% top",
				sync: 0.2,
			}),
		});
		animate("#model3d", {
			opacity: [0, 0, 1],
			translateY: ["100%", "0%"],
			duration: 1000,
			autoplay: onScroll({
				enter: "bottom top",
				leave: "40% top",
				sync: 0.2,
			}),
		});
		animate(".our-approach-bg", {
			x: ["-100%", "0%"],
			skewX: ["-10deg", "-10deg"],
			boxShadow: [
				"50px 0px 50px rgba(0, 0, 0, 0.1)",
				"20px 0px 20px rgba(0, 0, 0, 0.1)",
			],
			duration: 1000,
			delay: stagger(-200),
			autoplay: onScroll({
				enter: "bottom top",
				leave: "40% top",
				sync: 0.2,
			}),
		});
	});
</script>
